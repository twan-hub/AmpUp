[{"/Users/stitcha/my-app/src/index.js":"1","/Users/stitcha/my-app/src/reportWebVitals.js":"2","/Users/stitcha/my-app/src/App.js":"3","/Users/stitcha/my-app/src/Nav.js":"4","/Users/stitcha/my-app/src/Genere.js":"5","/Users/stitcha/my-app/src/Discovery.js":"6"},{"size":717,"mtime":1609888981643,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609278793737,"results":"9","hashOfConfig":"8"},{"size":1080,"mtime":1609789740462,"results":"10","hashOfConfig":"8"},{"size":1874,"mtime":1609899204004,"results":"11","hashOfConfig":"8"},{"size":456,"mtime":1609899093941,"results":"12","hashOfConfig":"8"},{"size":758,"mtime":1609898846118,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"4w2nn8",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},"/Users/stitcha/my-app/src/index.js",["31","32"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Nav from './Nav';\nimport Genere from './Genere';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\n\nReactDOM.render(\n  <Nav/>,\n  document.getElementById('nav')\n);\n\n// ReactDOM.render(\n//   <Genere/>,\n//   document.getElementById('genere')\n// );\n// const element = <h1>Hello, world</h1>;\n\n// ReactDOM.render(\n//     element,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["33","34"],"/Users/stitcha/my-app/src/reportWebVitals.js",[],"/Users/stitcha/my-app/src/App.js",["35"],"import logo from './logo.svg';\nimport './App.css';\nimport React from'react'\n\n\n\n// hello, World example\n// function formatName(user){\n//   return user.firstname + ' ' + user.lastname;\n// }\n// const user={\n//   firstname: \"Antwan\",\n//   lastname: \"Stith\"\n// }\n// const element= <h1>Helllo,{formatName(user)}</h1>;\n\n// Time Example\n// function tick(){\n//   const element=(\n//     <div>\n//       <h1>Hello,{formatName(user)}</h1>\n//       <h2>The time is {new Date().toLocaleTimeString()}.</h2>\n//     </div>\n//   )\n// }\n\n// Using properties\n\n// function Welcome(props){\n//   return <h1>Hello, {props.name}</h1>;\n// }\n// const element= <div>\n// <Welcome name='Twan' />\n// <Welcome name='Stith'/>\n// </div>;\n\n// class Toggle extends React.Component{\n//   constructor\n// }\n\n// function handleClick(e) {\n//   e.preventDefault();\n//   console.log('The link was clicked.');\n// };\n\nconst element= <button onClick='console.log(\"clicked\");'>\nClick me\n</button>;\n\n\nfunction App() {\n  return (\n    element\n  );\n}\n\nexport default App;\n","/Users/stitcha/my-app/src/Nav.js",["36","37"],"/Users/stitcha/my-app/src/Genere.js",["38"],"import './Genere.css';\nimport React from 'react'\nimport {Foo} from './App.js'\n\nconst genere = [\n'Hip-Hop',\n'Country',\n'Rock',\n'Alternative',\n'Classical',\n'Gospel'\n];\n\nconst element=\n<div class='flex-genre'>\n    <div>{genere[0]}</div>\n    <div>{genere[1]}</div>\n    <div>{genere[2]}</div>\n    <div>{genere[3]}</div>\n    <div>{genere[4]}</div>\n    <div>{genere[5]}</div>\n</div>;\n\nfunction Genere() {\n    return (\n      element\n   );\n}\n\nexport default Genere;","/Users/stitcha/my-app/src/Discovery.js",["39"],"import './Discovery.css';\nimport React from 'react'\n\nconst genere = [\n    'Hip-Hop',\n    'Country',\n    'Rock',\n    'Alternative',\n    'Classical',\n    'Gospel',\n    'Discovery'];\n\nconst discoveryElement=\n<div class='flex-discovery'>\n    <h1 class='top'>{genere[6]}</h1>\n    <div>{genere[0]}</div>\n    <div>{genere[1]}</div>\n    <div>{genere[2]}</div>\n    <div>{genere[3]}</div>\n    <div>{genere[4]}</div>\n    <div>{genere[5]}</div>\n</div>;\n\nfunction DiscoveryBody() {\n    return (\n        <div class='flex-discovery'>\n        <div>{genere[0]}</div>\n        <div>{genere[1]}</div>\n        <div>{genere[2]}</div>\n        <div>{genere[3]}</div>\n        <div>{genere[4]}</div>\n        <div>{genere[5]}</div>\n        </div>\n   );\n}\n\nexport default DiscoveryBody;",{"ruleId":"40","severity":1,"message":"41","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":11},{"ruleId":"40","severity":1,"message":"44","line":6,"column":8,"nodeType":"42","messageId":"43","endLine":6,"endColumn":14},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"40","severity":1,"message":"49","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"49","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":10,"column":8,"nodeType":"42","messageId":"43","endLine":10,"endColumn":14},{"ruleId":"40","severity":1,"message":"50","line":3,"column":9,"nodeType":"42","messageId":"43","endLine":3,"endColumn":12},{"ruleId":"40","severity":1,"message":"51","line":13,"column":7,"nodeType":"42","messageId":"43","endLine":13,"endColumn":23},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Genere' is defined but never used.","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"'logo' is defined but never used.","'Foo' is defined but never used.","'discoveryElement' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]